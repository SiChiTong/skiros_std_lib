//---------- Mandatory skill's include ----------
#include <pluginlib/class_list_macros.h>//Plugin export library
#include <ros/ros.h>
#include "skiros_skill/module_base.h"    //Base template for all modules
#include "skiros_common/logger_sys.h"   //Skiros logging system
#include "skiros_config/param_types.h"  //Default parameters
#include "skiros_config/declared_uri.h" //Default world model URIs (Unified Resource Identifier) -> generated by skiros_world_model/generate_uri
//---------- Mandatory skill's include end ----------

#include "skiros_world_model/reasoners_loading_func.h"
#include "skiros_lib_tools/tools.h"

namespace skiros
{

namespace module
{

/*!
 * \brief The base class for all locate mnodules. Defines common use variables
 *
 * Params: \n
 *  Camera - Camera to use \n
 *  Container - Container where the detected object are located. The 'partReference' property is required. \n
 * Failures: \n
 *  Never fail. \n
 *
 */
class Locate : public skiros::ModuleBase
{
public:
    /*!
      Here should be defined:
        -name, description, version
        -module parameters
      */

    Locate();

    virtual ~Locate() {}

    /*!
      Here should be defined:
        -persistents ROS listeners/advertiser
      */
    virtual bool onInit();


    //! Module's main execution routine
    virtual int execute();
protected:

    skiros_wm::Element container_;
    skiros_wm::Element camera_;
    skiros_wm::ReasonerPtrType reasoner_;
}; // class

}
} // skiros_module
